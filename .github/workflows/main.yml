name: Flask Project 1093

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: your-project-id
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials flask-app-cluster --zone us-central1-c

      - name: Remove Helm Repositories
        run: |
          helm uninstall flaskhelm
          helm uninstall prometheus
          helm uninstall grafana

      - name: Install Helm Repositories
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add FlaskProject gs://helm-bucket1093
          helm install flaskhelm FlaskProject/FlaskProject
          helm install prometheus prometheus-community/prometheus
          helm install grafana grafana/grafana
          kubectl patch service grafana -p '{"spec": {"type": "LoadBalancer"}}'
          kubectl patch service prometheus-server -p '{"spec": {"type": "LoadBalancer"}}'

      - name: Verify Deployment
        run: |
          kubectl get all
          kubectl get secret --namespace default grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
