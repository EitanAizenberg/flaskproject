name: Flask Project 1093

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: neural-virtue-393306
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Installing Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Installing Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh

      - name: Configuring Kubectl
        run: |
          gcloud components install kubectl
          gcloud container clusters get-credentials flask-app-cluster --zone us-central1-c

      - name: Adding Helm Charts
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts

      - name: Uninstalling existing Helm charts
        run: |
          if helm list -q | grep -E 'prometheus|grafana'; then
            echo "Helm releases exist. Proceeding with uninstallation."
            helm uninstall prometheus
            helm uninstall grafana
            exit 0
          else
            echo "Helm releases not found. Skipping uninstallation step."
            exit 1
          fi
        continue-on-error: true

      - name: Installing ArgoCD and the Flask app
        run: |
          kubectl delete namespace argocd --ignore-not-found=true
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          cd /home/runner/work/flaskproject/flaskproject/HelmRepository/FlaskProject
          kubectl apply -f argo.yaml -n argocd
          
      - name: Installing Helm charts and configuring services
        run: |
          helm install prometheus prometheus-community/prometheus
          helm install grafana grafana/grafana
          kubectl patch service grafana -p '{"spec": {"type": "LoadBalancer"}}'
          kubectl patch service prometheus-server -p '{"spec": {"type": "LoadBalancer"}}'

      - name: Verify deployment
        run: |
          kubectl get all
          kubectl get secret --namespace default grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
