pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *') // Makes it build every minute
    }

    stages {
        stage('Cleanup') {
            steps {
                echo 'Cleaning up!'
                cleanWs() // Cleans up the last run of the script because it cannot clone a git repository twice
            }
        }

        stage('Clone Repository') {
            steps {
                echo 'Cloning repository'
                withEnv(['GIT_TRACE=true']) {
                    sh 'git clone https://github.com/EitanAizenberg/flaskproject.git'
                }
            }
        }

        stage('Build & Zip') {
            steps {
                echo 'Zipping it'
                sh 'tar -cvzf Crypto-Site.tar.gz flaskproject' // Zips the repository's content
            }
        }

        stage('Upload to S3') {
            steps {
                echo 'Uploading to S3'
                withAWS(region: 'eu-central-1', credentials: 'AWS') {
                    sh 'aws s3 cp Crypto-Site.tar.gz s3://jenkins-project1/' // Allows it to access the AWS account and copies the zip file to the S3 bucket
                    sh 'aws s3 ls s3://jenkins-project1' // Lists the contents of the S3 bucket for verification
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                echo 'Deploying to EC2'
                withCredentials([sshUserPrivateKey(credentialsId: 'SSH', keyFileVariable: 'KEY_FILE')]) {
                    sshagent(['SSH_ec2']) {
                        sh """
                            ssh -i /var/lib/jenkins/DevopsCourse1.pem -o StrictHostKeyChecking=no ec2-user@52.59.27.179 '
                                curl -o Crypto-Site.tar.gz https://jenkins-project1.s3.eu-central-1.amazonaws.com/Crypto-Site.tar.gz //copies the Crypto-Site.tar.gz file to the ec2 instance
                                tar -xzf Crypto-Site.tar.gz //unzips the gz file
                                rm -fr Crypto-Site.tar.gz //removes the gz file after the unzipping of it
                                cd flaskproject
                                flask run --host 0.0.0.0 & //runs the flask project and the & runs it in the background
                            '
                        """
                    }
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                sshagent(['SSH_ec2']) {
                    sh 'ssh -i /var/lib/jenkins/DevopsCourse1.pem -o StrictHostKeyChecking=no ec2-user@52.59.27.179 ps -ef | grep python' //shows if the process is in fact running
                }ps -ef | grep python
            }
        }
    }
}
