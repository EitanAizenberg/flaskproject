pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *') //makes it build every minute
    }

    stages {
        stage('Cleanup') {
            steps {
                sh 'echo Cleaning up!'
                cleanWs() //cleans up the last run of the script because it cannot clone a git repository twice
            }
        }

        stage('Clone Repository') {
            steps {
                sh 'echo cloning repository'
                sh 'git clone https://github.com/EitanAizenberg/flaskproject.git'
            }
        }

        stage('Build & Zip') {
            steps {
                sh 'echo zipping it'
                sh 'tar -cvzf Crypto-Site.tar.gz flaskproject' //zips the repository's content
            }
        }

        stage('Upload to S3') {
            steps {
                sh 'echo uploading to S3'
                withAWS(region: 'eu-central-1', credentials: 'AWS') {
                    sh 'aws s3 cp Crypto-Site.tar.gz s3://jenkins-project1/' //allows it to access the AWS account and copies the zip file to the s3 bucket
                    sh 'aws s3 ls jenkins-project1'
                }
            }
        }

        stage ('connecting to EC2 instance') {
            steps {
                sh 'echo connecting to EC2 instance'
                sshagent(['AWS']) {
                    sh 'ssh -i "DevopsCourse1.pem" ec2-user@ec2-3-75-141-145.eu-central-1.compute.amazonaws.com'
                    sh 'echo connected'
                }
            }
        }
    }

   //     stage ('clone s3 bucket into EC2 instance') {
    //        steps {
    //            sh 'echo cloning s3 bucket into an ec2 instance'
    //            sh 'aws s3 sync https://s3.console.aws.amazon.com/s3/buckets/jenkins-project1?region=eu-central-1&tab=objects https://eu-central-1.console.aws.amazon.com/ec2-instance-connect/ssh?connType=standard&instanceId=i-0d0f9dade003c4abf&osUser=ec2-user&region=eu-central-1&sshPort=22#/ /home/ec2-user/'
    //        }
     //   }
}
