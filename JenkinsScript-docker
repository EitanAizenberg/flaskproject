pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *') // Makes it build every minute
    }

    environment {
        Docker = credentials('Docker')
        DOCKER_BUILDKIT = 'false'
    }

    stages {
        stage('Cleanup') {
            steps {
                echo 'Cleaning up!'
                cleanWs() // Cleans up the last run of the script because it cannot clone a git repository twice
            }
        }
        
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository'
                withEnv(['GIT_TRACE=true']) {
                    sh 'git clone https://github.com/EitanAizenberg/flaskproject.git'
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image'
                withCredentials([usernamePassword(credentialsId: 'Docker', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                // Your code here that requires the username and password credentials
                sh 'docker build -t eitanaizenberg/flaskproject:latest .'
                }
            }
        }
        
        stage('Push Docker Image to Docker Hub') {
            steps {
                echo 'Pushing  image to  Hub'
                withCredentials([usernamePassword(credentialsId: 'Docker', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    sh 'docker login -u "$Docker_USR" -p "$Docker_PSW"'
                    sh 'docker push eitanaizenberg/flaskproject:latest'
                }
            }
        }
        
        stage('Deploy Docker Container') {
            steps {
                echo 'Deploying Docker container'
                withCredentials([usernamePassword(credentialsId: 'Docker', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    sh '''
                        docker stop flaskproject-container || true
                        docker rm flaskproject-container || true
                        docker pull eitanaizenberg/flaskproject:latest
                        docker run -d --name myflaskapp-container -p 8080:8080 eitanaizenberg/flaskproject:latest
                    '''
                }
            }
        }
        
        stage('Verify Deployment') {
            steps {
                sh 'docker ps'
            }
        }
    }
}
